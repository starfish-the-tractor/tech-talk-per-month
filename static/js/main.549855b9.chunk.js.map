{"version":3,"sources":["parsers.ts","component/contentList.tsx","component/navList.tsx","component/markdownDetail.tsx","component/markdownComponent/code.tsx","component/htmlDetail.tsx","component/slideDetail.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["traverse","option","Object","assign","visitor","context","tree","iter","node","childrenContext","type","children","Array","contentParser","unified","use","markdown","root","filter","n","depth","parseContent","raw","a","run","parse","filtered","map","value","detail","text","m","exec","url","key","find","it","undefined","result","content","name","push","length","ContentList","props","items","groups","item","date","count","startIndex","selection","Selection","SelectionZone","GroupedList","groupProps","headerProps","styles","check","display","onRenderCell","index","onClick","onChange","DetailsRow","checkboxVisibility","CheckboxVisibility","hidden","itemIndex","groupNestingDepth","useFastIcons","selected","background","columns","minWidth","onRender","style","width","userSelect","Text","block","nowrap","getIcon","NavList","options","data","val","onRenderField","render","Icon","fontSize","marginRight","iconName","checked","flexDirection","justifyContent","height","ChoiceGroup","defaultValue","_","console","log","remark2rehype","highlight","rehype2react","createElement","React","components","Link","p","pre","boxShadow","Depths","depth4","marginTop","marginBottom","overflowX","className","margin","MarkdownDetail","useState","setData","useEffect","setTimeout","URL","toString","fetch","mode","res","ok","status","textAlign","paddingBottom","processSync","HtmlDetail","Fragment","zIndex","position","paddingTop","frameBorder","border","src","SlideDetail","allowFullScreen","borderWidth","borderStyle","borderColor","top","left","transform","App","setContent","current","setCurrent","setSelected","fileType","path","extname","dir","transitionProperty","transitionDuration","MotionDurations","duration4","overflowY","visibility","opacity","transitionDelay","transitionTimingFunction","MotionTimings","standard","padding","Boolean","window","location","hostname","match","initializeIcons","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.549855b9.chunk.js","sourcesContent":["// import React from \"react\";\r\nimport unified from \"unified\";\r\nimport { Node } from \"unist\";\r\nimport markdown from \"remark-parse\";\r\nimport { ContentItem, Article } from \"./struct\";\r\n\r\ninterface TraverseOption {\r\n  visitor?: { [x: string]: (node: Node, context: any) => any };\r\n  context?: any;\r\n}\r\n\r\nexport function traverse(option: TraverseOption) {\r\n  let { visitor, context } = Object.assign(\r\n    { visitor: {}, context: {} },\r\n    option\r\n  );\r\n  function transformer(tree: Node) {\r\n    function iter(node: Node, context: any) {\r\n      let childrenContext = Object.assign(\r\n        Object.assign({}, context),\r\n        typeof visitor[node.type] === \"function\"\r\n          ? visitor[node.type](node, context)\r\n          : {}\r\n      );\r\n      if (node.children instanceof Array) {\r\n        for (let c of node.children) {\r\n          iter(c, childrenContext);\r\n        }\r\n      }\r\n    }\r\n    iter(tree, context);\r\n  }\r\n  return transformer;\r\n}\r\n\r\nconst contentParser = unified()\r\n  .use(markdown)\r\n  .use(traverse, {\r\n    visitor: {\r\n      root: function(node, context) {\r\n        node.children = (node.children as Node[]).filter(\r\n          n => n.type !== \"heading\" || n.depth === 2\r\n        );\r\n        return {};\r\n      }\r\n    }\r\n  });\r\n\r\ntype MdNode = Node & { children: MdNode[] };\r\n\r\nexport async function parseContent(raw: string) {\r\n  let node = (await contentParser.run(contentParser.parse(raw))) as MdNode;\r\n  let filtered = node.children\r\n    .map(node => {\r\n      if (node.type === \"heading\") {\r\n        return {\r\n          type: \"heading\",\r\n          value: node.children[0].value as string\r\n        };\r\n      } else if (node.type === \"list\") {\r\n        return {\r\n          type: \"list\",\r\n          value: node.children.map(node => {\r\n            let detail = node.children[0].children\r\n              .filter(node => node.type === \"link\")\r\n              .map(node => {\r\n                let text = node.children[0].value as string;\r\n                let type = \"main\";\r\n                let m = /^\\[(.+)\\]$/g.exec(text);\r\n                if (m !== null) {\r\n                  type = m[1];\r\n                  text = m[1];\r\n                }\r\n                return {\r\n                  type: type,\r\n                  text: text,\r\n                  url: node.url as string\r\n                };\r\n              });\r\n            return {\r\n              key: detail.find(value => value.type === \"main\")!.text,\r\n              detail: detail\r\n            };\r\n          })\r\n        };\r\n      }\r\n    })\r\n    .filter(it => it !== undefined);\r\n  let result = [];\r\n  for (let it of filtered) {\r\n    if (it!.type === \"heading\") {\r\n      let content = [] as Article[] & { name?: string };\r\n      content.name = it!.value as string;\r\n      result.push(content);\r\n    } else {\r\n      result[result.length - 1].push(...(it!.value as Article[]));\r\n    }\r\n  }\r\n  return result;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  GroupedList,\r\n  IGroup,\r\n  DetailsRow,\r\n  Selection,\r\n  SelectionZone,\r\n  Text,\r\n  FocusZone,\r\n  SelectionMode,\r\n  CheckboxVisibility\r\n} from \"@fluentui/react\";\r\nimport { ContentItem, Article } from \"../struct\";\r\n\r\ninterface ContentListProps extends React.Props<typeof ContentList> {\r\n  item: ContentItem[];\r\n  width: string;\r\n  selected?: Article;\r\n  onChange: (item: Article) => void;\r\n}\r\n\r\nfunction ContentList(props: ContentListProps) {\r\n  let items = [];\r\n  let groups: IGroup[] = [];\r\n  for (let date of props.item) {\r\n    groups.push({\r\n      count: date.length,\r\n      key: date.name!,\r\n      name: date.name!,\r\n      startIndex: items.length\r\n    });\r\n    for (let it of date) {\r\n      items.push(it);\r\n    }\r\n  }\r\n  let selection = new Selection(); // only trick bug\r\n  return (\r\n    <SelectionZone selection={selection}>\r\n      <GroupedList\r\n        items={items}\r\n        groups={groups}\r\n        groupProps={{ headerProps: { styles: { check: { display: \"none\" } } } }}\r\n        onRenderCell={(depth, item: Article, index) => (\r\n          <div\r\n            onClick={() => {\r\n              props.onChange(item);\r\n            }}\r\n          >\r\n            <DetailsRow\r\n              checkboxVisibility={CheckboxVisibility.hidden}\r\n              item={item}\r\n              itemIndex={index!}\r\n              groupNestingDepth={depth}\r\n              selection={selection}\r\n              useFastIcons={false}\r\n              styles={{\r\n                root:\r\n                  item === props.selected\r\n                    ? { background: \"rgba(0,0,0,0.1)\" }\r\n                    : {}\r\n              }}\r\n              columns={[\r\n                {\r\n                  key: \"name\",\r\n                  name: \"name\",\r\n                  minWidth: 100,\r\n                  onRender: (item: Article) => (\r\n                    <div\r\n                      key={item.key}\r\n                      style={{\r\n                        width: `calc(${props.width} - 88px)`,\r\n                        userSelect: \"none\"\r\n                      }}\r\n                    >\r\n                      <Text block nowrap>\r\n                        {item.key}\r\n                      </Text>\r\n                    </div>\r\n                  )\r\n                }\r\n              ]}\r\n            />\r\n          </div>\r\n        )}\r\n      />\r\n    </SelectionZone>\r\n  );\r\n}\r\n\r\nexport default ContentList;\r\n","import React from \"react\";\r\nimport { ChoiceGroup, IChoiceGroupOption, Icon } from \"@fluentui/react\";\r\nimport { Article, DetailItem } from \"../struct\";\r\n\r\ninterface NavListProps extends React.Props<typeof NavList> {\r\n  data: Article;\r\n  selected?: DetailItem;\r\n  onChange: (option?: DetailItem) => void;\r\n}\r\n\r\ntype MyOption = {\r\n  detail: DetailItem;\r\n} & IChoiceGroupOption;\r\n\r\nfunction getIcon(type?: string) {\r\n  switch (type) {\r\n    case \"main\":\r\n      return \"TextDocument\";\r\n    case \"slide\":\r\n      return \"Presentation\";\r\n    default:\r\n      return undefined;\r\n  }\r\n}\r\n\r\nfunction NavList(props: NavListProps) {\r\n  let options = props.data.detail.map(\r\n    (val, index) =>\r\n      ({\r\n        key: val.url,\r\n        text: val.text,\r\n        detail: val,\r\n        onRenderField: (props, render) => (\r\n          <div style={{ display: \"flex\" }}>\r\n            <Icon\r\n              styles={{ root: { fontSize: 20, marginRight: 8 } }}\r\n              iconName={getIcon((props as MyOption)?.detail.type)}\r\n            />\r\n            {render!(props)}\r\n          </div>\r\n        )\r\n      } as MyOption)\r\n  );\r\n  if (options.length > 0) {\r\n    options[0].checked = true;\r\n  }\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        height: \"100%\"\r\n      }}\r\n    >\r\n      {props.data !== undefined && (\r\n        <ChoiceGroup\r\n          defaultValue={props.data.detail[0]?.url}\r\n          options={options}\r\n          value={props.selected?.url}\r\n          onChange={(_, option) => {\r\n            console.log(option);\r\n            props.onChange((option as MyOption).detail);\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavList;\r\n","import React, { useState, useEffect, lazy } from \"react\";\r\nimport unified from \"unified\";\r\nimport markdown from \"remark-parse\";\r\nimport remark2rehype from \"remark-rehype\";\r\nimport highlight from \"rehype-highlight\";\r\nimport rehype2react from \"rehype-react\";\r\nimport { DetailProps } from \"../struct\";\r\nimport { traverse } from \"../parsers\";\r\nimport { Link, Text } from \"@fluentui/react\";\r\nimport { Pre } from \"./markdownComponent/code\";\r\n\r\nconst render = unified()\r\n  .use(markdown)\r\n  .use(traverse, {})\r\n  .use(remark2rehype)\r\n  .use(highlight)\r\n  .use(rehype2react, {\r\n    createElement: React.createElement,\r\n    components: { a: Link, p: Text, pre: Pre }\r\n  });\r\n\r\nfunction MarkdownDetail(props: DetailProps<typeof MarkdownDetail>) {\r\n  let [data, setData] = useState(\"\");\r\n  useEffect(() => {\r\n    setTimeout(async () => {\r\n      if (props.detail == undefined) return;\r\n      try {\r\n        let url = new URL(\r\n          props.detail.url,\r\n          \"https://raw.githubusercontent.com/starfish-the-tractor/tech-talk-per-month/master/\"\r\n        ).toString();\r\n        let res = await fetch(url.toString(), {\r\n          // cache: \"no-cache\",\r\n          mode: \"cors\"\r\n        });\r\n        if (!res.ok) {\r\n          throw res.status;\r\n        }\r\n        let raw = await res.text();\r\n        setData(raw);\r\n      } catch (e) {}\r\n    }, 1000);\r\n  }, [props.detail]);\r\n  return (\r\n    <div style={{ textAlign: \"left\", paddingBottom: 16 }}>\r\n      {(render.processSync(data) as any).result}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MarkdownDetail;\r\n","import React from \"react\";\r\nimport { Depths } from \"@uifabric/fluent-theme\";\r\n\r\nexport function Pre(props: React.Props<typeof Pre>) {\r\n  return (\r\n    <div\r\n      style={{\r\n        boxShadow: Depths.depth4,\r\n        marginTop: 16,\r\n        marginBottom: 16,\r\n        width: \"100%\",\r\n        overflowX: \"auto\"\r\n      }}\r\n    >\r\n      <pre className=\"hljs\" style={{ margin: 0 }}>\r\n        {props.children}\r\n      </pre>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { DetailProps } from \"../struct\";\r\nimport { Button, concatStyleSets } from \"@fluentui/react\";\r\n\r\nfunction HtmlDetail(props: DetailProps<typeof HtmlDetail>) {\r\n  let url = props.detail\r\n    ? new URL(\r\n        props.detail.url,\r\n        \"https://starfish-the-tractor.github.io/tech-talk-per-month/\"\r\n      ).toString()\r\n    : \"\";\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        style={{\r\n          zIndex: -1,\r\n          position: \"absolute\",\r\n          textAlign: \"center\",\r\n          width: \"100%\",\r\n          paddingTop: 16\r\n        }}\r\n      >\r\n        无法正常嵌入网页，请自行打开\r\n      </div>\r\n      <iframe\r\n        frameBorder=\"0\"\r\n        style={{\r\n          background: \"transparent\",\r\n          zIndex: 1,\r\n          border: 0,\r\n          width: \"100%\",\r\n          height: \"calc(100vh - 4px)\",\r\n          margin: 0\r\n        }}\r\n        src={url}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default HtmlDetail;\r\n","import React from \"react\";\r\nimport { DetailProps } from \"../struct\";\r\n\r\nfunction SlideDetail(props: DetailProps<typeof SlideDetail>) {\r\n  let url = props.detail\r\n    ? new URL(\r\n        props.detail.url,\r\n        \"https://starfish-the-tractor.github.io//tech-talk-per-month/\"\r\n      ).toString()\r\n    : \"\";\r\n  return (\r\n    <iframe\r\n      frameBorder=\"0\"\r\n      allowFullScreen\r\n      style={{\r\n        position: \"fixed\",\r\n        borderWidth: 1,\r\n        borderStyle: \"solid\",\r\n        borderColor: \"gray\",\r\n        top: 0,\r\n        left: 0,\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n        transform: \"scale(0.5,0.5)\"\r\n      }}\r\n      src={url}\r\n    ></iframe>\r\n  );\r\n}\r\n\r\nexport default SlideDetail;\r\n","import React, { useEffect, useState } from \"react\";\nimport path from \"path-browserify\";\nimport { MotionTimings, MotionDurations } from \"@uifabric/fluent-theme\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { ContentItem, Article, DetailItem } from \"./struct\";\nimport { parseContent } from \"./parsers\";\nimport ContentList from \"./component/contentList\";\nimport NavList from \"./component/navList\";\nimport MarkdownDetail from \"./component/markdownDetail\";\nimport HtmlDetail from \"./component/htmlDetail\";\nimport SlideDetail from \"./component/slideDetail\";\n\nfunction App() {\n  let [content, setContent] = useState<ContentItem[]>([]);\n  let [current, setCurrent] = useState<Article>();\n  let [selected, setSelected] = useState<DetailItem>();\n  useEffect(() => {\n    (async () => {\n      try {\n        let res = await fetch(\n          \"https://raw.githubusercontent.com/starfish-the-tractor/tech-talk-per-month/master/Contents.md\",\n          {\n            // cache: \"no-cache\",\n            mode: \"cors\"\n          }\n        );\n        if (!res.ok) {\n          throw res.status;\n        }\n        let raw = await res.text();\n        let result = await parseContent(raw);\n        console.log(result);\n        setContent(result);\n        // setTimeout(() => {\n        //   setCurrent([]);\n        // }, 1500);\n      } catch (e) {\n        console.log(e);\n      }\n    })();\n  }, []);\n  const fileType = path.extname(selected?.url ?? \"\");\n  return (\n    <div className=\"App ms-Grid\" dir=\"ltr\">\n      <div className=\"ms-Grid-row\">\n        <div\n          className={\n            \"ms-Grid-col \" + (current !== undefined ? \"ms-sm3\" : \"ms-sm6\")\n          }\n          style={{\n            left: current !== undefined ? \"0%\" : \"25%\",\n            transitionProperty: \"left\",\n            transitionDuration: MotionDurations.duration4,\n            textAlign: \"left\",\n            height: \"100vh\",\n            overflowY: \"auto\"\n          }}\n        >\n          <ContentList\n            item={content}\n            width={current !== undefined ? \"25vw\" : \"50vw\"}\n            selected={current}\n            onChange={item => {\n              setCurrent(item);\n              setSelected(item.detail[0]);\n            }}\n          />\n        </div>\n        <div\n          className=\"ms-Grid-col ms-sm6\"\n          style={{\n            visibility: current !== undefined ? \"visible\" : \"collapse\",\n            opacity: current !== undefined ? 1 : 0,\n            transitionProperty: \"opacity\",\n            transitionDelay: MotionDurations.duration4,\n            transitionDuration: MotionDurations.duration4,\n            transitionTimingFunction: MotionTimings.standard,\n            height: current !== undefined ? \"100vh\" : 0,\n            overflowY: \"auto\",\n            padding: 0\n          }}\n        >\n          {selected?.type === \"main\" && (\n            <React.Fragment>\n              {fileType === \".md\" && <MarkdownDetail detail={selected} />}\n              {fileType !== \".md\" && <HtmlDetail detail={selected} />}\n            </React.Fragment>\n          )}\n          {selected?.type === \"slide\" && <SlideDetail detail={selected} />}\n        </div>\n        <div\n          className=\"ms-Grid-col ms-sm3\"\n          style={{\n            visibility: current !== undefined ? \"visible\" : \"collapse\",\n            opacity: current !== undefined ? 1 : 0,\n            transitionProperty: \"opacity\",\n            transitionDelay: MotionDurations.duration4,\n            transitionDuration: MotionDurations.duration4,\n            transitionTimingFunction: MotionTimings.standard,\n            height: current !== undefined ? \"100vh\" : 0\n          }}\n        >\n          <NavList\n            data={current || { key: \"\", detail: [] }}\n            selected={selected}\n            onChange={setSelected}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { initializeIcons } from '@uifabric/icons';\r\nimport 'office-ui-fabric-react/dist/css/fabric.min.css';\r\nimport 'highlight.js/styles/github.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\ninitializeIcons();\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}